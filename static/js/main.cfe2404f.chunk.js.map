{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/ContactsBar/ContactsBar.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/DialogBar/DialogBar.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/ContactsBar/ContactsBar.tsx","components/Dialogs/DialogBar/DialogBar.tsx","components/Dialogs/Dialogs.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","App.tsx","reportWebVitals.ts","Redux/state.tsx","index.tsx"],"names":["module","exports","Header","className","s","header","src","Navbar","nav","item","to","activeClassName","activeLink","Post","props","message","likesCount","MyPosts","postDataElements","postDataType","map","p","newPostElement","React","createRef","content","postsBlock","ref","onClick","current","text","value","addPost","posts","ProfileInfo","descriptionBlock","Profile","ContactsBar","path","id","Items","active","name","DialogBar","Dialogs","messageElements","messageData","ContactsBarElements","dialogsData","dialog","dialogs","dialogsItems","messages","News","Music","Settings","App","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","state","profile","messagesPages","postData","ReactDOM","StrictMode","postMessage","newPost","push","document","getElementById"],"mappings":"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","file":"static/js/main.cfe2404f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__ibuwh\",\"item\":\"Navbar_item__29bHi\",\"activeLink\":\"Navbar_activeLink__2Rr0N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2f89G\",\"posts\":\"MyPosts_posts__2ya0h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1mw9N\",\"dialogItems\":\"Dialogs_dialogItems__1v-Qw\",\"Items\":\"Dialogs_Items__eYCIk\",\"active\":\"Dialogs_active__5K0NF\",\"messages\":\"Dialogs_messages__CilLp\",\"message\":\"Dialogs_message__2zcNs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"ContactsBar_dialogs__3CsMC\",\"dialogItems\":\"ContactsBar_dialogItems__2LFJG\",\"Items\":\"ContactsBar_Items__3-zD3\",\"active\":\"ContactsBar_active__3K-vX\",\"messages\":\"ContactsBar_messages__27WRC\",\"message\":\"ContactsBar_message__3a5aK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3RNNt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__13jk5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__mD4m7\",\"s\":\"ProfileInfo_s__3s7c1\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3FWNC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogBar_dialogs__3L60I\",\"dialogItems\":\"DialogBar_dialogItems__B5ejV\",\"Items\":\"DialogBar_Items__3n-hA\",\"active\":\"DialogBar_active__h37KG\",\"messages\":\"DialogBar_messages__20g5Z\",\"message\":\"DialogBar_message__2SGo1\"};","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\n\r\nconst Header = () => {\r\n   return <header className={s.header}>\r\n        <img src=\"https://99px.ru/sstorage/53/2016/10/tmb_181552_2066.jpg\"/>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\n\r\ntype PostType= {\r\n    message:string;\r\n    likesCount:number;\r\n}\r\n\r\n\r\nconst Post = (props:PostType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSJMeCyOueXNI3vrvdp6coOxOsIKxWQjIF_pA&usqp=CAU\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like</span> {props.likesCount}\r\n            </div>\r\n            <div>\r\n                <span>Dislike</span>\r\n            </div>\r\n\r\n        </div>)\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {postDataTypeProps} from \"../Profile\";\r\n\r\n\r\nconst MyPosts = (props: postDataTypeProps) => {\r\n\r\n\r\n    let postDataElements =\r\n        props.postDataType.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let addPost = () => {\r\n        if (newPostElement.current) {\r\n            let text = newPostElement.current.value;\r\n            props.addPost(text);\r\n        }\r\n    }\r\n\r\n\r\n    return <div className={s.content}>\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts </h3>\r\n            <div>\r\n                <textarea ref={newPostElement}> </textarea>\r\n            </div>\r\n            <div>\r\n                <button onClick={addPost}>Add post</button>\r\n            </div>\r\n            <div>\r\n                <button>Remove</button>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postDataElements}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://ega.ee/wp-content/uploads/2020/06/cyber_hacker.jpg\"/>\r\n\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport { postDataType } from \"../../Redux/state\";\r\n\r\n\r\nexport type postDataTypeProps = {\r\n    postDataType:Array<postDataType>\r\n    addPost: (postMessage:string) => void\r\n\r\n}\r\n\r\n\r\nconst Profile = (props:postDataTypeProps) => {\r\n    return <div>\r\n        <ProfileInfo/>\r\n        <MyPosts postDataType={props.postDataType} addPost={props.addPost}/>\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport s from \"./ContactsBar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type ContactsBarPropsType = {\r\n    name: string;\r\n    id: number;\r\n}\r\n\r\nexport const ContactsBar = (props: ContactsBarPropsType) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n            <div className={s.Items + \" \" + s.active}>\r\n                <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactsBar;","import React from \"react\";\r\nimport s from \"./DialogBar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogBarPropsType = {\r\n    message: string;\r\n}\r\nexport const DialogBar = (props: DialogBarPropsType) => {\r\n    return (\r\n            <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default DialogBar;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport ContactsBar from \"./ContactsBar/ContactsBar\";\r\nimport DialogBar from \"./DialogBar/DialogBar\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {dialogsDataType, messageDataType} from \"../../Redux/state\";\r\n\r\n\r\nexport type DialogPropsType = {\r\n    dialogsData: Array<dialogsDataType>\r\n    messageData: Array<messageDataType>\r\n}\r\n\r\nconst Dialogs = (props: DialogPropsType) => {\r\n    let messageElements = props.messageData\r\n        .map((message) => <DialogBar message={message.message}/>)\r\n    let ContactsBarElements = props.dialogsData\r\n        .map(dialog => <ContactsBar name={dialog.name} id={dialog.id}/>);\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {ContactsBarElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport s from \"./News.module.css\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n        News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport s from \"./Music.module.css\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n        Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport s from \"./News.module.css\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n        Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport {dialogsDataType, messageDataType, postDataType} from \"./Redux/state\";\nimport {AppTypeProps} from \"./Redux/state\";\n\n\nconst App = (props: AppTypeProps) => {\n    return (\n        <div className=\"app-wrapper\">\n            <Header/>\n            <Navbar/>\n            <div className=\"app-wrapper-content\">\n                <Route path={\"/dialogs\"} render={() => <Dialogs\n                    dialogsData={props.dialogsData}\n                    messageData={props.messageData}/>}/>\n                <Route path={\"/profile\"} render={() => <Profile\n                    postDataType={props.postDataType}\n                    addPost={props.addPost}/>}/>\n                <Route path={\"/news\"} render={() => <News/>}/>\n                <Route path={\"/music\"} render={() => <Music/>}/>\n                <Route path={\"/settings\"} render={() => <Settings/>}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export type messageDataType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type dialogsDataType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type postDataType =   {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type AppTypeProps = {\r\n    dialogsData: Array<dialogsDataType>\r\n    messageData: Array<messageDataType>\r\n    postDataType: Array<postDataType>\r\n    addPost: (postMessage:string) => void\r\n}\r\n\r\n\r\nlet state = {\r\n        profile: {\r\n        messageData: [\r\n            {id: 1., message: \"Hi\"},\r\n            {id: 2., message: \"How are u?\"},\r\n            {id: 3., message: \"Yo\"},\r\n        ],\r\n        dialogsData: [\r\n            {id: 1., name: \"Egor\"},\r\n            {id: 2., name: \"Nastya\"},\r\n            {id: 3., name: \"Elena\"},\r\n            {id: 4., name: \"Volodya\"},\r\n            {id: 5., name: \"Valentina\"},\r\n            {id: 6., name: \"Valeriy\"},\r\n        ],\r\n    },\r\n    messagesPages:{\r\n        postData: [\r\n            {id: 1, message: \"Hi, how are you?\", likesCount: 0},\r\n            {id: 2, message: \"It's, my first post\", likesCount: 23},\r\n            {id: 3, message: \"It's, my first post\", likesCount: 15},\r\n            {id: 4, message: \"It's, my first post\", likesCount: 182}\r\n        ]\r\n    }\r\n}\r\n\r\n\r\n\r\nexport let addPost = (postMessage:string) => {\r\n    let newPost:postDataType = {\r\n        id:5,\r\n        message: postMessage,\r\n        likesCount: 0\r\n    };\r\n    state.messagesPages.postData.push (newPost);\r\n}\r\n\r\nexport default state;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport state from \"./Redux/state\";\nimport {addPost} from \"./Redux/state\";\nimport {AppTypeProps} from \"./Redux/state\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <App\n                dialogsData={state.profile.dialogsData}\n                messageData={state.profile.messageData}\n                postDataType={state.messagesPages.postData}\n                addPost={addPost}/>\n\n        </React.StrictMode>,\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}